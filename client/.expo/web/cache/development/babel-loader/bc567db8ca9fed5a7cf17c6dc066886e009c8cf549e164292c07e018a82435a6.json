{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport AppScreens from \"../app_screens/AppScreens\";\nimport AuthScreens from \"../auth_screens/AuthScreens\";\nimport GreyBackground from \"../styles/GreyBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction Home() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    screenToggle = _useState2[0],\n    setScreenToggle = _useState2[1];\n  console.log('from home component');\n  return _jsx(NavigationContainer, {\n    children: _jsx(GreyBackground, {\n      children: screenToggle ? _jsx(AppScreens, {}) : _jsx(AuthScreens, {})\n    })\n  });\n}\n;\nexport default Home;\n{}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    marginTop: 15\n  },\n  text: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'hsla(45, 90%, 46%, 1)'\n  }\n});","map":{"version":3,"names":["React","useState","NavigationContainer","View","TouchableOpacity","Button","Text","StyleSheet","Image","TextInput","LinearGradient","AppScreens","AuthScreens","GreyBackground","jsx","_jsx","Home","_useState","_useState2","_slicedToArray","screenToggle","setScreenToggle","console","log","children","styles","create","container","flexDirection","justifyContent","alignItems","paddingVertical","paddingHorizontal","marginTop","text","fontSize","fontWeight","textAlign","color"],"sources":["/home/bambam/development/code/regulate/regulate-app/client/components/Home.js"],"sourcesContent":["// functional imports\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { View, TouchableOpacity, Button, Text, StyleSheet, Image, TextInput } from \"react-native\";\nimport { LinearGradient } from 'expo-linear-gradient';\n\n//component imports\nimport AppScreens from '../app_screens/AppScreens';\nimport AuthScreens from '../auth_screens/AuthScreens';\nimport GreyBackground from '../styles/GreyBackground';\n\n//screen toggle is just for viewing auth or app screens\n//need to implement redux store and loading or home screen while user is being loaded\n\nfunction Home() {\n  //set to true for appscreens and false for authscreens\n  const [screenToggle, setScreenToggle] = useState(true);\n  console.log('from home component')\n  return (\n    <NavigationContainer>\n      <GreyBackground>\n {screenToggle ? <AppScreens /> : <AuthScreens />}\n      </GreyBackground>\n    </NavigationContainer>\n  );\n};\n\nexport default Home;\n\n{/* \n  <Text style={{ fontSize: 24, color: '#FFF' }}>Radial Gradient Background</Text>\n</View> */}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    marginTop: 15,\n  },\n  text: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'hsla(45, 90%, 46%, 1)'\n  },\n});"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,QAAQ,0BAA0B;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAE/D,SAASC,cAAc,QAAQ,sBAAsB;AAGrD,OAAOC,UAAU;AACjB,OAAOC,WAAW;AAClB,OAAOC,cAAc;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAKtD,SAASC,IAAIA,CAAA,EAAG;EAEd,IAAAC,SAAA,GAAwChB,QAAQ,CAAC,IAAI,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpCI,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClC,OACER,IAAA,CAACb,mBAAmB;IAAAsB,QAAA,EAClBT,IAAA,CAACF,cAAc;MAAAW,QAAA,EACnBJ,YAAY,GAAGL,IAAA,CAACJ,UAAU,IAAE,CAAC,GAAGI,IAAA,CAACH,WAAW,IAAE;IAAC,CAC3B;EAAC,CACE,CAAC;AAE1B;AAAC;AAED,eAAeI,IAAI;AAEnB,CAEU;AAEV,IAAMS,MAAM,GAAGlB,UAAU,CAACmB,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,CAAC;IAClBC,iBAAiB,EAAE,EAAE;IACrBC,SAAS,EAAE;EACb,CAAC;EACDC,IAAI,EAAE;IACJC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}