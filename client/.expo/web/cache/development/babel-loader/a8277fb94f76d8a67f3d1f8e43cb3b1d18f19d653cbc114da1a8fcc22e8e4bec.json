{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport { DefaultTheme, NavigationContainer, defaultTheme } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport AppScreens from \"../app_screens/AppScreens\";\nimport AuthScreens from \"../auth_screens/AuthScreens\";\nimport GreyBackground from \"../styles/GreyBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RegulateTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    primary: 'hsla(0, 0%, 0%, 0)'\n  })\n});\nfunction Home() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    screenToggle = _useState2[0],\n    setScreenToggle = _useState2[1];\n  console.log('from home component');\n  return _jsx(GreyBackground, {\n    children: _jsx(NavigationContainer, {\n      theme: RegulateTheme,\n      children: _jsx(View, {\n        style: styles.container,\n        children: screenToggle ? _jsx(AppScreens, {}) : _jsx(AuthScreens, {})\n      })\n    })\n  });\n}\n;\nexport default Home;\n{}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  text: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'hsla(45, 90%, 46%, 1)'\n  }\n});","map":{"version":3,"names":["React","useState","DefaultTheme","NavigationContainer","defaultTheme","View","TouchableOpacity","Button","Text","StyleSheet","Image","TextInput","LinearGradient","AppScreens","AuthScreens","GreyBackground","jsx","_jsx","RegulateTheme","_objectSpread","colors","primary","Home","_useState","_useState2","_slicedToArray","screenToggle","setScreenToggle","console","log","children","theme","style","styles","container","create","flex","text","fontSize","fontWeight","textAlign","color"],"sources":["/home/bambam/development/code/regulate/regulate-app/client/components/Home.js"],"sourcesContent":["// functional imports\nimport React, { useState } from 'react';\nimport { DefaultTheme, NavigationContainer, defaultTheme } from '@react-navigation/native';\nimport { View, TouchableOpacity, Button, Text, StyleSheet, Image, TextInput } from \"react-native\";\nimport { LinearGradient } from 'expo-linear-gradient';\n\n//component imports\nimport AppScreens from '../app_screens/AppScreens';\nimport AuthScreens from '../auth_screens/AuthScreens';\nimport GreyBackground from '../styles/GreyBackground';\n\n//screen toggle is just for viewing auth or app screens\n//need to implement redux store and loading or home screen while user is being loaded\n\nconst RegulateTheme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: 'hsla(0, 0%, 0%, 0)'\n  }\n}\n\nfunction Home() {\n  //set to true for appscreens and false for authscreens\n  const [screenToggle, setScreenToggle] = useState(true);\n  console.log('from home component')\n  return (\n      <GreyBackground>\n    <NavigationContainer theme = {RegulateTheme}>\n        <View style={styles.container}>\n          {screenToggle ? <AppScreens /> : <AuthScreens />}\n        </View>\n    </NavigationContainer>\n      </GreyBackground>\n  );\n};\n\nexport default Home;\n\n{/* \n  <Text style={{ fontSize: 24, color: '#FFF' }}>Radial Gradient Background</Text>\n</View> */}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  text: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'hsla(45, 90%, 46%, 1)'\n  },\n});"],"mappings":";;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,EAAEC,mBAAmB,EAAEC,YAAY,QAAQ,0BAA0B;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAE3F,SAASC,cAAc,QAAQ,sBAAsB;AAGrD,OAAOC,UAAU;AACjB,OAAOC,WAAW;AAClB,OAAOC,cAAc;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAKtD,IAAMC,aAAa,GAAAC,aAAA,CAAAA,aAAA,KACdjB,YAAY;EACfkB,MAAM,EAAAD,aAAA,CAAAA,aAAA,KACDjB,YAAY,CAACkB,MAAM;IACtBC,OAAO,EAAE;EAAoB;AAC9B,EACF;AAED,SAASC,IAAIA,CAAA,EAAG;EAEd,IAAAC,SAAA,GAAwCtB,QAAQ,CAAC,IAAI,CAAC;IAAAuB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpCI,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClC,OACIZ,IAAA,CAACF,cAAc;IAAAe,QAAA,EACjBb,IAAA,CAACd,mBAAmB;MAAC4B,KAAK,EAAIb,aAAc;MAAAY,QAAA,EACxCb,IAAA,CAACZ,IAAI;QAAC2B,KAAK,EAAEC,MAAM,CAACC,SAAU;QAAAJ,QAAA,EAC3BJ,YAAY,GAAGT,IAAA,CAACJ,UAAU,IAAE,CAAC,GAAGI,IAAA,CAACH,WAAW,IAAE;MAAC,CAC5C;IAAC,CACU;EAAC,CACJ,CAAC;AAEvB;AAAC;AAED,eAAeQ,IAAI;AAEnB,CAEU;AAEV,IAAMW,MAAM,GAAGxB,UAAU,CAAC0B,MAAM,CAAC;EAC/BD,SAAS,EAAE;IACTE,IAAI,EAAE;EACR,CAAC;EACDC,IAAI,EAAE;IACJC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}